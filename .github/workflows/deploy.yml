name: LMS CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # ðŸ§± Frontend Build
      - name: Install & Build Angular Frontend
        working-directory: ./lmsfrontend/frontend
        run: |
          npm install
          npx ng build --configuration=production

          echo "Frontend build completed. Checking output:"
          ls -la dist/
          ls -la dist/frontend/ || echo "No frontend directory"
          ls -la dist/frontend/browser/ || echo "No browser directory"

      # âš™ Backend Build
      - name: Install & Build Node Backend
        working-directory: ./lmsbackend/backend
        run: |
          npm install
          npm run build

          echo "Backend build completed. Checking output:"
          ls -la dist/
          ls -la dist/lmsbackend/backend/dist/ || echo "No nested dist directory"

      #debug check
      - name: Debug - Check directory structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Root directory structure:"
          ls -la
          echo "Frontend directory structure:"
          ls -la lmsfrontend/frontend/ || echo "Directory not found"
          echo "Frontend dist directory:"
          find lmsfrontend/frontend/dist -type d | sort || echo "No dist directory found"
          echo "Backend directory structure:"
          ls -la lmsbackend/backend/ || echo "Directory not found"
          echo "Backend dist directory:"
          find lmsbackend/backend/dist -type d | sort || echo "No dist directory found"

      # ðŸš€ Deploy to GCP via SSH
      - name: Deploy Frontend via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "lmsfrontend/frontend/dist/frontend/browser/*"
          target: "/home/${{ secrets.SSH_USER }}/lms-temp/frontend"
          overwrite: true

      # Deploy Backend to server in separate folder
      - name: Deploy Backend via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "lmsbackend/backend/dist/lmsbackend/backend/dist/*"
          target: "/home/${{ secrets.SSH_USER }}/lms-temp/backend"
          overwrite: true

      # SSH into server and move files into their final location
      - name: SSH into GCP and move files
        uses: appleboy/ssh-action@v1.0.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Current working directory on server: $(pwd)"
            echo "Home directory contents:"
            ls -la ~
            echo "Listing files in temp directory:"
            ls -la /home/${{ secrets.SSH_USER }}/lms-temp/
            echo "Temp frontend directory contents:"
            ls -la /home/${{ secrets.SSH_USER }}/lms-temp/frontend || echo "No frontend temp directory"
            echo "Temp backend directory contents:"
            ls -la /home/${{ secrets.SSH_USER }}/lms-temp/backend || echo "No backend temp directory"

            echo "Deploying frontend files..."
            sudo rm -rf /var/www/html/browser
            echo "After rm -rf:"
            ls -la /var/www/html/
            sudo mkdir -p /var/www/html/browser
            echo "After mkdir -p:"
            ls -la /var/www/html/
            sudo cp -rv ~/lms-temp/frontend/lmsfrontend/frontend/dist/frontend/browser/* /var/www/html/browser/
            echo "After cp -rv:"
            ls -la /var/www/html/browser/
            sudo chown -R www-data:www-data /var/www/html/browser
            echo "After chown:"
            ls -la /var/www/html/browser/
            sudo chmod -R 755 /var/www/html/browser
            echo "After chmod:"
            ls -la /var/www/html/browser/
            sudo nginx -t
            echo "After nginx -t"
            sudo nginx -s reload
            echo "After nginx reload"
            echo "Frontend deployment completed. Listing /var/www/html/browser contents:"
            ls -la /var/www/html/browser

            echo "Deploying backend files..."
            pm2 stop lms-backend || true
            echo "After pm2 stop"
            rm -rf ~/learningproject/lmsbackend/backend/dist
            echo "After rm -rf backend dist"
            mkdir -p ~/learningproject/lmsbackend/backend/dist
            echo "After mkdir backend dist"
            cp -r ~/lms-temp/backend/* ~/learningproject/lmsbackend/backend/dist/
            echo "After cp backend files"
            cd ~/learningproject/lmsbackend/backend/dist
            echo "Current backend dist directory: $(pwd)"
            echo "Backend dist directory contents:"
            ls -la
            pm2 flush
            echo "After pm2 flush"
            if ! pm2 list | grep -q lms-backend; then
              pm2 start main.js --name lms-backend
              echo "After pm2 start"
            else
              pm2 restart lms-backend
              echo "After pm2 restart"
            fi
            pm2 save
            echo "After pm2 save"
            echo "Backend deployment completed successfully!"
            ls -la ~/learningproject/lmsbackend/backend/dist