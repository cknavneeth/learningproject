name: LMS CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # üß± Frontend Build
      - name: Install & Build Angular Frontend
        working-directory: ./lmsfrontend/frontend
        run: |
          npm install
          npx ng build --configuration=production

      # ‚öôÔ∏è Backend Build
      - name: Install & Build Node Backend
        working-directory: ./lmsbackend/backend
        run: |
          npm install
          npm run build

      # üöÄ Deploy Frontend via SSH
      - name: Deploy Frontend via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "lmsfrontend/frontend/dist/frontend/browser/*"
          target: "/home/${{ secrets.SSH_USER }}/lms-temp/frontend"
          overwrite: true

      # üöÄ Deploy Backend via SSH
      - name: Deploy Backend via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "lmsbackend/backend/dist/*"  # ‚úÖ Only copy the dist content
          target: "/home/${{ secrets.SSH_USER }}/lms-temp/backend"
          overwrite: true

      # üîß SSH into server and move files
      - name: SSH into server and move files
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Deploying frontend..."
            sudo rm -rf /var/www/html/browser
            sudo mkdir -p /var/www/html/browser
            sudo cp -rv ~/lms-temp/frontend/* /var/www/html/browser/
            sudo chown -R www-data:www-data /var/www/html/browser
            sudo chmod -R 755 /var/www/html/browser
            sudo nginx -t
            sudo nginx -s reload

            echo "Deploying backend..."
            pm2 stop backend || true
            rm -rf ~/learningproject/lmsbackend/backend/dist
            mkdir -p ~/learningproject/lmsbackend/backend/dist
            cp -r ~/lms-temp/backend/* ~/learningproject/lmsbackend/backend/dist/
            pm2 flush
            pm2 start ~/learningproject/lmsbackend/backend/dist/main.js --name backend
